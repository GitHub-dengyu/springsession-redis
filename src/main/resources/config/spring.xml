<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"  
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:p="http://www.springframework.org/schema/p" 
    xmlns:context="http://www.springframework.org/schema/context" 
    xmlns:mvc="http://www.springframework.org/schema/mvc" 
    xmlns:task="http://www.springframework.org/schema/task"
    xsi:schemaLocation="
        http://www.springframework.org/schema/beans 
        http://www.springframework.org/schema/beans/spring-beans-4.2.xsd 
        http://www.springframework.org/schema/context 
        http://www.springframework.org/schema/context/spring-context-4.2.xsd 
        http://www.springframework.org/schema/mvc 
        http://www.springframework.org/schema/mvc/spring-mvc-4.2.xsd 
        http://www.springframework.org/schema/task 
        http://www.springframework.org/schema/task/spring-task-4.2.xsd">
  
 	<context:component-scan base-package="com.huato.redissession" >
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>
    <!--启用注解  -->
    <context:annotation-config />
    <!--扫描读取redis.properties文件  -->
    <context:property-placeholder location="classpath:config/redis.properties"/>
   
    <!--配置Redis来管理Session  -->
    <bean id="redisHttpSessionConfiguration" class="org.springframework.session.data.redis.config.annotation.web.http.RedisHttpSessionConfiguration">
	    <!--配置session的过期时间1800  默认30分钟  -->
	    <property name="maxInactiveIntervalInSeconds" value="${redis.expiration}"/>
	</bean>
	
    <!-- 配置JedisPoolConfig实例 -->  
	<bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
	   <property name="maxIdle" value="${redis.maxIdle}" />     
       <property name="maxWaitMillis" value="${redis.maxWait}" />
       <property name="testOnBorrow" value="${redis.testOnBorrow}" />
	</bean>
	
  	 <!--配置JedisConnectionFactory -->  
	<bean id="jedisConnectionFactory"  class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory" destroy-method="destroy">     
       <property name="hostName" value="${redis.host}"/>  
       <property name="port" value="${redis.port}" />
      
       <!--<property name="password" value="${redis.pass}"/>-->
       <property name="poolConfig"  ref="jedisPoolConfig" />
   </bean>
   
  <bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate">  
       <property name="connectionFactory" ref="jedisConnectionFactory"/>  
   </bean>
   
</beans>